<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="poseidon.zhdj.db.video.dao.VideoModelMapper" >
  <resultMap id="BaseResultMap" type="poseidon.zhdj.db.video.model.VideoModel">
    <id column="vid" property="vid" jdbcType="BIGINT" />
    <id column="zyId" property="zyId" jdbcType="BIGINT" />
    <result column="docType" property="docType" jdbcType="INTEGER" />
    <result column="zyType" property="zyType" jdbcType="VARCHAR" />
    <result column="videoType" property="videoType" jdbcType="INTEGER" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="videoImg" property="videoImg" jdbcType="VARCHAR" />
    <result column="headImg" property="headImg" jdbcType="VARCHAR" />
    <result column="views" property="views" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="cTime" property="cTime" jdbcType="TIMESTAMP" />
    <result column="mTime" property="mTime" jdbcType="TIMESTAMP" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="act" property="act" jdbcType="INTEGER" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="giftScore" property="giftScore" jdbcType="INTEGER" />
    <result column="likeCount" property="likeCount" jdbcType="INTEGER" />
    <result column="giftCount" property="giftCount" jdbcType="INTEGER" />

    <result column="unitName" property="unitName" jdbcType="VARCHAR" />

    <result column="isLike" property="isLike" jdbcType="INTEGER" />
    <result column="todayIsLike" property="todayIsLike" jdbcType="INTEGER" />

    <result column="isStar" property="isStar" jdbcType="INTEGER" />
    <result column="isVote" property="isVote" jdbcType="INTEGER" />
    <result column="isViewed" property="isViewed" jdbcType="INTEGER" />
    <result column="voteContent" property="voteContent" jdbcType="VARCHAR" />
    <result column="isFavorite" property="isFavorite" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="ResultMapWithCount" type="poseidon.zhdj.db.video.model.VideoModel" extends="BaseResultMap">
    <result column="voteCount" property="voteCount" jdbcType="INTEGER" />
    <result column="starCount" property="starCount" jdbcType="INTEGER" />
    <result column="favoriteCount" property="favoriteCount" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="UnitResultMap" type="poseidon.zhdj.db.video.model.VideoModel" extends="BaseResultMap">
    <result column="uploadCount" property="uploadCount" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="totalCountAndViewCount" type="poseidon.zhdj.db.video.model.VideoModel" extends="BaseResultMap">
    <result column="totalCount" property="totalCount" jdbcType="INTEGER" />
    <result column="viewCount" property="viewCount" jdbcType="BIGINT" />
  </resultMap>


  <sql id="Base_Column_List" >
    vid,zyId,docType,zyType,videoType,userName, title, `desc`, url,videoImg, views, status, cTime, mTime, uid,act,sign,giftScore,likeCount,giftCount
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from video
    where vid = #{vid,jdbcType=BIGINT}
  </select>

  <select id="selectByActZyId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from video
    where zyId = #{zyId,jdbcType=BIGINT} and act = #{act,jdbcType=INTEGER}
  </select>

  <!-- 查询数量及基本信息 -->
  <select id="getVideoInfo" resultMap="ResultMapWithCount">
    select
    <include refid="Base_Column_List" />,
    (select count(*) from vote WHERE vid = #{vid,jdbcType=BIGINT}) AS voteCount,
    likeCount,
    giftCount,
    (select count(*) from favorite WHERE objId = #{vid,jdbcType=BIGINT}) AS favoriteCount
    <if test="uid != null" >
      ,(select count(1) from videolike where videolike.vid = v.vid and videolike.uid = #{uid}) as isLike,
      (SELECT count(*) from `user` where FIND_IN_SET(v.vid,`user`.viewVid) AND `user`.uid = #{uid}) AS isViewed,
      (SELECT u.unitName from `user` u where u.uid = v.uid) AS unitName,
      (select count(1) from videolike where videolike.vid = v.vid and videolike.uid = #{uid} and DATE_FORMAT(videolike.cTime,'%Y-%c-%d') = DATE_FORMAT(NOW(),'%Y-%c-%d')) as todayIsLike,
      (select count(1) from vote where vote.vid = v.vid and vote.uid = #{uid}) as isVote,
      (select count(1) from star where star.vid = v.vid and star.uid = #{uid}) as isStar,
      (select count(1) from favorite where favorite.objId = v.vid and favorite.uid = #{uid}) as isFavorite
    </if>
    from video v
    where vid = #{vid,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from video
    where vid = #{vid,jdbcType=BIGINT}
  </delete>

  <delete id="deleteByActZyId">
    delete from video
    where zyId = #{zyId,jdbcType=BIGINT} and act = #{act,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="poseidon.zhdj.db.video.model.VideoModel" >
    insert into video (vid,zyId,docType,zyType,videoType,userName, title, `desc`,
      url,videoImg, views, status,
      cTime, mTime, uid,act,sign,giftScore,likeCount,giftCount
      )
    values (#{vid,jdbcType=BIGINT},#{zyId,jdbcType=BIGINT},#{docType,jdbcType=INTEGER},#{zyType,jdbcType=VARCHAR},#{videoType,jdbcType=INTEGER},
      #{userName,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR},
      #{url,jdbcType=VARCHAR},#{videoImg,jdbcType=VARCHAR}, #{views,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
      #{cTime,jdbcType=TIMESTAMP}, #{mTime,jdbcType=TIMESTAMP}, #{uid,jdbcType=VARCHAR},#{act,jdbcType=INTEGER},#{sign,jdbcType=VARCHAR},
      #{giftScore,jdbcType=INTEGER},#{likeCount,jdbcType=INTEGER},#{giftCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="poseidon.zhdj.db.video.model.VideoModel" >
    insert into video
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="vid != null" >
        vid,
      </if>
      <if test="zyId != null" >
        zyId,
      </if>
      <if test="docType != null" >
        docType,
      </if>
      <if test="zyType != null" >
      zyType,
      </if>
      <if test="videoType != null" >
        videoType,
      </if>
      <if test="userName != null" >
        userName,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="desc != null" >
        `desc`,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="videoImg != null" >
        videoImg,
      </if>
      <if test="views != null" >
        views,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="cTime != null" >
        cTime,
      </if>
      <if test="mTime != null" >
        mTime,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="act != null" >
        act,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="giftScore != null" >
        giftScore,
      </if>
      <if test="likeCount != null" >
        likeCount,
      </if>
      <if test="giftCount != null" >
        giftCount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="vid != null" >
        #{vid,jdbcType=BIGINT},
      </if>
      <if test="zyId != null" >
        #{zyId,jdbcType=BIGINT},
      </if>
      <if test="docType != null" >
        #{docType,jdbcType=INTEGER},
      </if>
      <if test="zyType != null" >
        #{zyType,jdbcType=VARCHAR},
      </if>
      <if test="videoType != null" >
        #{videoType,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="videoImg != null" >
        #{videoImg,jdbcType=VARCHAR},
      </if>
      <if test="views != null" >
        #{views,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="cTime != null" >
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mTime != null" >
        #{mTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="act != null" >
        #{act,jdbcType=INTEGER},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="giftScore != null" >
        #{giftScore,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null" >
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="giftCount != null" >
        #{giftCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="poseidon.zhdj.db.video.model.VideoModel" >
    update video
    <set >
      <if test="zyId != null" >
        zyId = #{zyId,jdbcType=BIGINT},
      </if>
      <if test="docType != null" >
        docType = #{docType,jdbcType=INTEGER},
      </if>
      <if test="zyType != null" >
        zyType = #{zyType,jdbcType=VARCHAR},
      </if>
      <if test="videoType != null" >
        videoType = #{videoType,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="videoImg != null" >
        videoImg = #{videoImg,jdbcType=VARCHAR},
      </if>
      <if test="views != null" >
        views = #{views,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="cTime != null" >
        cTime = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mTime != null" >
        mTime = #{mTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="act != null" >
        act = #{act,jdbcType=INTEGER},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="giftScore != null" >
        giftScore = #{giftScore,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null" >
        likeCount = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="giftCount != null" >
        giftCount = #{giftCount,jdbcType=INTEGER},
      </if>
    </set>
    where vid = #{vid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="poseidon.zhdj.db.video.model.VideoModel" >
    update video
    set zyId = #{zyId,jdbcType=BIGINT},
      docType = #{docType,jdbcType=INTEGER},
      zyType = #{zyType,jdbcType=VARCHAR},
      videoType = #{videoType,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      userName = #{userName,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      videoImg = #{videoImg,jdbcType=VARCHAR},
      views = #{views,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      cTime = #{cTime,jdbcType=TIMESTAMP},
      mTime = #{mTime,jdbcType=TIMESTAMP},
      uid = #{uid,jdbcType=VARCHAR},
      act = #{act,jdbcType=INTEGER},
      sign = #{sign,jdbcType=VARCHAR},
      giftScore = #{giftScore,jdbcType=INTEGER},
      likeCount = #{likeCount,jdbcType=INTEGER},
      giftCount = #{giftCount,jdbcType=INTEGER}
    where vid = #{vid,jdbcType=BIGINT}
  </update>

  <select id="selectVideoList" resultMap="ResultMapWithCount">
    select vid,zyId,title,`desc`,url,videoImg,views,cTime,mTime,zyType,videoType,docType,sign,uid,
    (select user.userName from user where user.uid = video.uid) as userName,
    (select user.headImg from user where user.uid = video.uid) as headImg,
     likeCount,
    (select count(1) from vote WHERE vote.vid = video.vid and vote.act = #{act}) AS voteCount,
    giftScore,
    giftCount
    <if test="uid != null" >
      ,(select count(1) from videolike where videolike.vid = video.vid and videolike.uid = #{uid} and videolike.act = #{act}) as isLike,
      (SELECT count(*) from `user` where FIND_IN_SET(video.vid,`user`.viewVid) AND `user`.uid = #{uid}) AS isViewed,
      (select count(1) from videolike where videolike.vid = video.vid and videolike.uid = #{uid} and DATE_FORMAT(videolike.cTime,'%Y-%c-%d') = DATE_FORMAT(NOW(),'%Y-%c-%d')  and videolike.act = #{act}) as todayIsLike,
      (select count(1) from vote where vote.vid = video.vid and vote.act = #{act} and vote.uid = #{uid}) as isVote,
      (select count(1) from star where star.vid = video.vid and star.act = #{act} and star.uid = #{uid}) as isStar
    </if>
    from video where act=#{act} and status = 0
    <if test="videoType != null" >
      and videoType=#{videoType}
    </if>
    <if test="docType != null" >
      and docType=#{docType}
    </if>
    ORDER BY ${orderBy} DESC,cTime DESC
  </select>

  <select id="selectVideoListByType" resultMap="ResultMapWithCount">
    select vid,title,url,videoImg,views,cTime,mTime,zyType,videoType,docType,sign,
    (select user.userName from user where user.uid = video.uid) as userName,
    (select user.headImg from user where user.uid = video.uid) as headImg,
     likeCount,
    (select count(1) from vote WHERE vote.vid = video.vid and vote.act = #{act}) AS voteCount,
    giftScore,
     giftCount
    <if test="uid != null" >
      ,(select count(1) from videolike where videolike.vid = video.vid and videolike.uid = #{uid} and videolike.act = #{act}) as isLike,
      (SELECT count(*) from `user` where FIND_IN_SET(video.vid,`user`.viewVid) AND `user`.uid = #{uid}) AS isViewed,
      (select count(1) from videolike where videolike.vid = video.vid and videolike.uid = #{uid} and DATE_FORMAT(videolike.cTime,'%Y-%c-%d') = DATE_FORMAT(NOW(),'%Y-%c-%d')  and videolike.act = #{act}) as todayIsLike,
      (select count(1) from vote where vote.vid = video.vid and vote.act = #{act} and vote.uid = #{uid}) as isVote,
      (select count(1) from star where star.vid = video.vid and star.act = #{act} and star.uid = #{uid}) as isStar
    </if>
    from video where act=#{act} and videoType=#{videoType} and status = 0
    ORDER BY cTime DESC
  </select>

  <select id="selectResultList" resultMap="ResultMapWithCount">
    select vid,title,cTime,mTime,zyType,videoType,docType,sign,
    (select user.userName from user where user.uid = video.uid) as userName,
    (select user.headImg from user where user.uid = video.uid) as headImg,
     likeCount,
    (select count(1) from vote WHERE vote.vid = video.vid and vote.act = 2) AS voteCount,
    (select content from vote WHERE vote.vid = video.vid) AS voteContent
    from video where act=2 and status = 0 and vid in
    <foreach item="item" index="index" collection="vids" open="(" separator="," close=")">
    #{item}
    </foreach>
  </select>

  <select id="getVideoCount" resultType="int">
    SELECT count(1) FROM video where act=#{act} and status = 0
  </select>

  <select id="getVideoCountByType" resultType="int">
    SELECT count(1) FROM video where act=#{act} and status = 0
    and docType = #{docType}
    <if test="videoType != null" >
    and videoType = #{videoType}
    </if>
  </select>

  <select id="getRestVideoList" resultMap="ResultMapWithCount">
    select vid,title,url,videoImg,views,cTime,mTime,zyType,videoType,docType,sign,
    (select user.userName from user where user.uid = video.uid) as userName,
    (select user.headImg from user where user.uid = video.uid) as headImg,
     likeCount,
    (select count(1) from star WHERE star.vid = video.vid) AS starCount,
    (select count(1) from vote WHERE vote.vid = video.vid and vote.act = #{act}) AS voteCount
    <if test="uid != null" >
      ,(SELECT count(*) from `user` where FIND_IN_SET(video.vid,`user`.viewVid) AND `user`.uid = #{uid}) AS isViewed,
      (select count(1) from star where star.vid = video.vid and star.act = #{act} and star.uid = #{uid}) as isStar
    </if>
    from video where act=#{act} and status = 0 AND video.vid NOT in (select rank.vid from rank)
    ORDER BY ${orderBy} DESC,cTime DESC
  </select>

  <select id="getStarList" resultMap="ResultMapWithCount">
    select v.vid,v.title,v.zyId,v.zyType,v.videoType,v.docType,v.`desc`,v.url,v.videoImg,v.views,v.uid,v.act,v.sign,
    (select user.userName from user where user.uid = (select uid from video vi where vi.vid = star.vid)) as userName,
    (select user.headImg from user where user.uid = (select uid from video vid where vid.vid = star.vid)) as headImg,
    v.likeCount,
    (select count(1) from vote WHERE vote.vid = star.vid and vote.act = #{act}) AS voteCount,
    (select count(1) from star st WHERE star.vid = st.vid and st.act = #{act}) AS starCount
    <if test="uid != null" >
      ,(SELECT count(*) from `user` where FIND_IN_SET(star.vid,`user`.viewVid) AND `user`.uid = #{uid}) AS isViewed,
      (select count(1) from star s where s.vid = star.vid and star.act = #{act} and star.uid = #{uid}) as isStar
    </if>
    from star,video v WHERE star.vid = v.vid GROUP BY star.vid ORDER BY starCount DESC LIMIT 5
  </select>

  <select id="pageFavoriteInfo" resultMap="ResultMapWithCount">
    select
    v.vid,v.title,v.videoImg,v.sign,
    v.likeCount,
    v.giftScore ,
    v.giftCount
    from favorite f , video v
    where f.objId = v.vid AND f.uid = #{uid} AND f.act = #{act}
  </select>

  <select id="getFavoriteVideoCount" resultType="int">
    SELECT count(1) FROM favorite where uid=#{uid,jdbcType=VARCHAR} AND act=#{act,jdbcType=INTEGER}
  </select>

  <!-- 查询每个单位上传的视频个数 -->
  <select id="getUnitUploadCount" resultMap="UnitResultMap">
    select count(v.vid) AS uploadCount , u.unitName
    from video v , user u where v.uid = u.uid AND v.act = #{act,jdbcType=INTEGER} AND v.status = 0 GROUP BY u.unitName ORDER BY uploadCount DESC
  </select>

  <!-- 查询总数  -->
  <select id="totalCountAndViewCount" resultMap="totalCountAndViewCount">
    SELECT count(1) AS totalCount ,SUM(video.views) as viewCount from video where video.act = #{act,jdbcType=INTEGER} AND video.status = 0
  </select>

  <!-- 查询参赛视频  -->
  <select id="getCompeteVideos" resultMap="ResultMapWithCount">
    select vid,zyId,uid,title,url,videoImg,views,cTime,mTime,zyType,videoType,docType,sign, userName,headImg, likeCount,
            (select count(1) from vote WHERE vote.vid = competevideos.vid and vote.act = 1) AS voteCount,
            giftScore, giftCount,
            (select count(1) from videolike where videolike.vid = competevideos.vid and videolike.uid = #{uid}) as isLike,
            (SELECT count(*) from `user` where FIND_IN_SET(competevideos.vid,`user`.viewVid) AND `user`.uid = #{uid}) AS isViewed,
            (select count(1) from videolike where videolike.vid = competevideos.vid and videolike.uid = #{uid} and DATE_FORMAT(videolike.cTime,'%Y-%c-%d') = DATE_FORMAT(NOW(),'%Y-%c-%d')) as todayIsLike,
            (select count(1) from vote where vote.vid = competevideos.vid and vote.uid = #{uid}) as isVote,
            (select count(1) from favorite where favorite.objId = competevideos.vid and favorite.uid = #{uid}) as isFavorite
    from competevideos where act=1 and status = 0  ORDER BY randSort
  </select>

  <!-- 查询用户给本单位投得票数 -->
    <select id="getUnitVoteCount" resultType="int">
      select count(1) from video v , user u where u.uid = v.uid and v.vid in (select vo.vid from vote vo where vo.uid = #{uid} AND vo.act = #{act})
      AND u.unitName = (select us.unitName from user us where us.uid = (select vd.uid from video vd where vd.vid = #{vid}))
    </select>

  <!-- 查询基本信息 -->
  <select id="getVideoByTitle" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from video
    where title =  #{title} AND status = 0 limit 1
  </select>

  <select id="getVideoListOrderBy" resultMap="ResultMapWithCount">
    select v.*,(select u.headImg from user u where u.uid = v.uid) as headImg,
    (select count(1) from vote vo WHERE vo.vid = v.vid) AS voteCount
    from video v,user u where u.uid = v.uid AND v.act = 1 AND v.status = 0 AND v.docType = 2 AND u.unitName = #{unit} and v.vid NOT in
    <foreach item="vid" index="index" collection="vids" open="(" separator="," close=")">
     #{vid}
    </foreach>
    ORDER BY #{orderBy} DESC LIMIT #{limit}
  </select>

</mapper>