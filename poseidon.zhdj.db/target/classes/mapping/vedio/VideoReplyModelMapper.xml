<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="poseidon.zhdj.db.video.dao.VideoReplyModelMapper" >
  <resultMap id="BaseResultMap" type="poseidon.zhdj.db.video.model.VideoReplyModel" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="vid" property="vid" jdbcType="BIGINT" />
    <result column="parentId" property="parentId" jdbcType="BIGINT" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="parentUserName" property="parentUserName" jdbcType="VARCHAR" />
    <result column="videoTime" property="videoTime" jdbcType="TIME" />
    <result column="cTime" property="cTime" jdbcType="TIMESTAMP" />
    <result column="giftId" property="giftId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="act" property="act" jdbcType="INTEGER" />
    <result column="atUid" property="atUid" jdbcType="VARCHAR" />
    <result column="atUserName" property="atUserName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, vid, parentId, uid, videoTime, cTime, giftId, `type`,content,act
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from videoreply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from videoreply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="poseidon.zhdj.db.video.model.VideoReplyModel" >
    insert into videoreply (id, vid, parentId, 
      uid, videoTime, cTime, 
      giftId, type, content,act
      )
    values (#{id,jdbcType=BIGINT}, #{vid,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, 
      #{uid,jdbcType=VARCHAR}, #{videoTime,jdbcType=TIME}, #{cTime,jdbcType=TIMESTAMP}, 
      #{giftId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR},#{act,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="poseidon.zhdj.db.video.model.VideoReplyModel" >
    insert into videoreply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="vid != null" >
        vid,
      </if>
      <if test="parentId != null" >
        parentId,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="videoTime != null" >
        videoTime,
      </if>
      <if test="cTime != null" >
        cTime,
      </if>
      <if test="giftId != null" >
        giftId,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="act != null" >
        act,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="vid != null" >
        #{vid,jdbcType=BIGINT},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="videoTime != null" >
        #{videoTime,jdbcType=TIME},
      </if>
      <if test="cTime != null" >
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="giftId != null" >
        #{giftId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="act != null" >
        #{act,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="poseidon.zhdj.db.video.model.VideoReplyModel" >
    update videoreply
    <set >
      <if test="vid != null" >
        vid = #{vid,jdbcType=BIGINT},
      </if>
      <if test="parentId != null" >
        parentId = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="videoTime != null" >
        videoTime = #{videoTime,jdbcType=TIME},
      </if>
      <if test="cTime != null" >
        cTime = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="giftId != null" >
        giftId = #{giftId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="act != null" >
        act = #{act,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="poseidon.zhdj.db.video.model.VideoReplyModel" >
    update videoreply
    set vid = #{vid,jdbcType=BIGINT},
      parentId = #{parentId,jdbcType=BIGINT},
      uid = #{uid,jdbcType=VARCHAR},
      videoTime = #{videoTime,jdbcType=TIME},
      cTime = #{cTime,jdbcType=TIMESTAMP},
      giftId = #{giftId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="poseidon.zhdj.db.video.model.VideoReplyModel" >
    update videoreply
    set vid = #{vid,jdbcType=BIGINT},
      parentId = #{parentId,jdbcType=BIGINT},
      uid = #{uid,jdbcType=VARCHAR},
      videoTime = #{videoTime,jdbcType=TIME},
      cTime = #{cTime,jdbcType=TIMESTAMP},
      giftId = #{giftId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      act = #{act,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 资源的互动交流 -->
  <select id="getVideoReply" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    vr.*,
    (select userName from user u where u.uid = vr.uid) AS userName,
    (SELECT vrp.uid from videoreply vrp where vrp.id = vr.parentId ) AS atUid,
    (select userName from user u where u.uid = (SELECT vrp.uid from videoreply vrp where vrp.id = vr.parentId )) AS atUserName
    from videoreply vr
    where type !=1 and vr.vid = #{vid,jdbcType=BIGINT} ORDER BY vr.cTime DESC
  </select>
  
  <!-- 分页查询评论 -->
  <select id="pageVideoReply" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select 
    videoreply.id, videoreply.vid, videoreply.parentId, videoreply.uid, 
    videoreply.videoTime, videoreply.cTime, videoreply.giftId, 
    videoreply.`type`,videoreply.content,videoreply.act
    ,user.userName
    from videoreply join user on videoreply.uid = user.uid
    where type !=1 and videoreply.vid = #{vid,jdbcType=BIGINT} 
    ORDER BY videoreply.cTime desc
  </select>
  
  <!-- 查询评论的用户数     今天-->
  <select id="selectTodayCountByTime"  resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select 
    count(DISTINCT(uid))
    from videoreply
    where act = #{act,jdbcType=INTEGER} 
    	AND DATE_FORMAT(cTime,'%Y-%c-%d') = DATE_FORMAT(NOW(),'%Y-%c-%d')
  </select>

</mapper>