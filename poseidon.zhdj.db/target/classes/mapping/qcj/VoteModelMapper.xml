<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="poseidon.zhdj.db.qcj.dao.VoteModelMapper" >
  <resultMap id="BaseResultMap" type="poseidon.zhdj.db.qcj.model.VoteModel" >
    <id column="voteId" property="voteId" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="vid" property="vid" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="cTime" property="cTime" jdbcType="TIMESTAMP" />
    <result column="act" property="act" jdbcType="INTEGER" />
    <result column="headImg" property="headImg" jdbcType="VARCHAR" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    voteId, uid, vid, content, reason, cTime, act
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from vote
    where voteId = #{voteId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from vote
    where voteId = #{voteId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="poseidon.zhdj.db.qcj.model.VoteModel" >
    insert into vote (voteId, uid, vid, 
      content, reason, cTime, 
      act)
    values (#{voteId,jdbcType=INTEGER}, #{uid,jdbcType=VARCHAR}, #{vid,jdbcType=BIGINT}, 
      #{content,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, #{cTime,jdbcType=TIMESTAMP}, 
      #{act,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="poseidon.zhdj.db.qcj.model.VoteModel" >
    insert into vote
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="voteId != null" >
        voteId,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="vid != null" >
        vid,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="cTime != null" >
        cTime,
      </if>
      <if test="act != null" >
        act,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="voteId != null" >
        #{voteId,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="vid != null" >
        #{vid,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="cTime != null" >
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="act != null" >
        #{act,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="poseidon.zhdj.db.qcj.model.VoteModel" >
    update vote
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="vid != null" >
        vid = #{vid,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="cTime != null" >
        cTime = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="act != null" >
        act = #{act,jdbcType=INTEGER},
      </if>
    </set>
    where voteId = #{voteId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="poseidon.zhdj.db.qcj.model.VoteModel" >
    update vote
    set uid = #{uid,jdbcType=VARCHAR},
      vid = #{vid,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      cTime = #{cTime,jdbcType=TIMESTAMP},
      act = #{act,jdbcType=INTEGER}
    where voteId = #{voteId,jdbcType=INTEGER}
  </update>

  <!-- 是否投过票 -->
  <select id="getVoteByUidAndVid" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from vote
    where vid = #{vid,jdbcType=BIGINT} AND  uid = #{uid,jdbcType=VARCHAR} limit 1
  </select>

  <!-- 用户已经投票数 -->
  <select id="getUserVoteCountByVid" resultType="java.lang.Integer">
    select
    count(*) as count
    from vote
    where uid = #{uid,jdbcType=VARCHAR} AND act = #{act}
  </select>

  <!-- 用户投票详情 -->
  <select id="getVoteListByVid" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />,
    (select userName from user u where u.uid = v.uid) AS userName,
    (select headImg from user u where u.uid = v.uid) AS headImg
      from vote v
      where vid = #{vid,jdbcType=BIGINT} ORDER BY cTime DESC
  </select>

</mapper>